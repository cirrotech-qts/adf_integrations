{
	"name": "prod-pipeline-cirrotech-entitysync",
	"properties": {
		"activities": [
			{
				"name": "Clear SQL tables",
				"description": "Clear all tables before getting data",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[clear_customer_tables]"
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlSyncDB",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Copy SQL data from BC SQL to temp",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Clear SQL tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "No_",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "No_",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Name",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "name",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Currency Id",
									"type": "Guid",
									"physicalType": "uniqueidentifier"
								},
								"sink": {
									"name": "currencyId",
									"type": "Guid",
									"physicalType": "uniqueidentifier"
								}
							},
							{
								"source": {
									"name": "Our Account No_",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Our Account No_",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Post Code",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Post Code",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Global Dimension 1 Code",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Global Dimension 1 Code",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Address",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Address",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Address 2",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Address 2",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "City",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "City",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "County",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "County",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Phone No_",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Phone No_",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Fax No_",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Fax No_",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Salesperson Code",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Salesperson Code",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "VAT Registration No_",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "VAT Registration No_",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "E-Mail",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "E-Mail",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Preferred Bank Account Code",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Preferred Bank Account Code",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Location Code",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Location Code",
									"type": "String",
									"physicalType": "nvarchar"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "BCSQLTable",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AzureSQL_CustomersFromBC",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Get Syrinx Auth Token",
				"description": "Acquire an auth token using encoded user name and password",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Copy SQL data from BC SQL to temp",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "GET",
					"headers": {
						"Authorization": "Basic QWRtaW46cGFzc3dvcmQ=",
						"Content-Type": "application/json",
						"Accept": "application/json"
					},
					"url": "http://qts-syrinx-1/DemoSyrinxWebApi/api/v1.2/Auth",
					"connectVia": {
						"referenceName": "QTSOnPrem",
						"type": "IntegrationRuntimeReference"
					}
				}
			},
			{
				"name": "Token",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get Syrinx Auth Token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "Syrinx Token",
					"value": {
						"value": "@string(activity('Get Syrinx Auth Token').output.access_Token)\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get Customers from Syrinx API",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "GET",
					"headers": {
						"Authorization": {
							"value": "@concat('Bearer ', variables('Syrinx Token'))\n",
							"type": "Expression"
						}
					},
					"url": "http://qts-syrinx-1/DemoSyrinxWebApi/api/v1.2/Customers",
					"connectVia": {
						"referenceName": "QTSOnPrem",
						"type": "IntegrationRuntimeReference"
					}
				}
			},
			{
				"name": "Copy Syrinx resposne to SQL",
				"type": "Copy",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"additionalHeaders": {
							"Authorization": {
								"value": "@concat('Bearer ', variables('Syrinx Token'))",
								"type": "Expression"
							}
						},
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['id']"
								},
								"sink": {
									"name": "id",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['name']"
								},
								"sink": {
									"name": "name",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['address']['postcode']"
								},
								"sink": {
									"name": "postcode",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['address']['telephone']"
								},
								"sink": {
									"name": "telephone",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['address']['fax']"
								},
								"sink": {
									"name": "fax",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['address']['customerId']"
								},
								"sink": {
									"name": "customerId",
									"type": "Int32"
								}
							},
							{
								"source": {
									"path": "['email']"
								},
								"sink": {
									"name": "email",
									"type": "String"
								}
							}
						],
						"collectionReference": "$['results']",
						"mapComplexValuesToString": false
					}
				},
				"inputs": [
					{
						"referenceName": "RestResourceSyrinxCustomers",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AzureSQL_CustomersFromSyrinx",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Update or Create Customers in Syrinx",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "loopCounter",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"headers": {
						"Authorization": {
							"value": "@concat('Bearer ', variables('Syrinx Token'))\n",
							"type": "Expression"
						},
						"Content-Type": "application/json"
					},
					"url": "http://qts-syrinx-1/DemoSyrinxWebApi/api/v1.2/Customers",
					"connectVia": {
						"referenceName": "QTSOnPrem",
						"type": "IntegrationRuntimeReference"
					},
					"body": [
						{
							"type": "A",
							"name": "Cirrotech",
							"accNo": "NCC1701D",
							"taxCode": "",
							"locTaxCode": "",
							"internal": true,
							"companyType": "Individual",
							"currencyCode": "GBP",
							"address": {
								"name": "DEPOT",
								"line1": "Head Office",
								"line2": null,
								"line3": "UK",
								"town": "CAVERSHAM",
								"county": "BERKSHIRE",
								"postcode": "RG4 5BB",
								"telephone": "07495395817",
								"fax": null,
								"latitude": "51.4591155",
								"longitude": "-0.9674165",
								"what3Words": "fixed.almost.years",
								"directions": null
							},
							"countryCode": "",
							"marketingCategory": "",
							"prop1": "",
							"prop6": "",
							"prop7": "",
							"prop8": "",
							"prop9": "XY9",
							"prop10": "",
							"currentFlag": true,
							"canUseAnyDepot": true,
							"onHold": false,
							"depot": {
								"id": 1,
								"name": "QTS National HQ",
								"shortCode": "001",
								"address": {
									"id": 2,
									"name": "Depot",
									"line1": "Rench Farm",
									"line2": "Drumclog",
									"line3": null,
									"town": "Strathhaven",
									"county": "South Lanarkshire",
									"postcode": null,
									"telephone": "01357 440 364",
									"fax": null,
									"latitude": null,
									"longitude": null,
									"what3Words": null,
									"prop1": null,
									"prop2": null,
									"prop3": null,
									"prop4": null,
									"prop5": null,
									"prop6": null,
									"prop7": null,
									"prop8": null,
									"prop9": null,
									"prop10": null,
									"directions": null,
									"operatorNotes": null,
									"customerId": null,
									"dateCreated": null,
									"createdByUser": null,
									"dateModified": null,
									"modifiedByUser": null
								}
							},
							"exportToAccounts": false,
							"creditLimit": 1000,
							"accountBalance": 500,
							"email": "",
							"vatNumber": "",
							"regNumber": "AB51XYZ",
							"cisRegNumber": "AB123XYZ",
							"webSite": "abc.def.co.uk",
							"paymentTermText": {
								"id": null
							}
						}
					]
				}
			},
			{
				"name": "totalPages",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "totalItemCount",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "totalPages",
					"value": {
						"value": "@add(div(activity('Get Customers from Syrinx API').output.totalItemCount, activity('Get Customers from Syrinx API').output.pageSize), if(greater(mod(activity('Get Customers from Syrinx API').output.totalItemCount, activity('Get Customers from Syrinx API').output.pageSize), 0), 1, 0))\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "totalItemCount",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get Customers from Syrinx API",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "totalItemCount",
					"value": {
						"value": "@activity('Get Customers from Syrinx API').output.totalItemCount\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "For Each Page from Syrinx",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Update or Create Customers in Syrinx",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@variables('pageNumbers')",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy Syrinx resposne to SQL_copy1",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "If Condition1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:05.000",
									"requestMethod": "GET",
									"additionalHeaders": {
										"Authorization": {
											"value": "@concat('Bearer ', variables('Syrinx Token'))",
											"type": "Expression"
										}
									},
									"paginationRules": {
										"supportRFC5988": "true"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false
								},
								"enableStaging": false,
								"parallelCopies": 1,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "['id']"
											},
											"sink": {
												"name": "id",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['prop10']"
											},
											"sink": {
												"name": "accNo",
												"type": "String"
											}
										}
									],
									"collectionReference": "$['results']",
									"mapComplexValuesToString": false
								}
							},
							"inputs": [
								{
									"referenceName": "RestResourceSyrinxCustomers",
									"type": "DatasetReference",
									"parameters": {
										"PageNo": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "AzureSQL_CustomersFromSyrinx",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(mod(item(), 10), 0)\n",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Get Syrinx Auth Token in loop",
										"description": "Acquire an auth token using encoded user name and password",
										"type": "WebActivity",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"method": "GET",
											"headers": {
												"Authorization": "Basic QWRtaW46cGFzc3dvcmQ=",
												"Content-Type": "application/json",
												"Accept": "application/json"
											},
											"url": "http://qts-syrinx-1/DemoSyrinxWebApi/api/v1.2/Auth",
											"connectVia": {
												"referenceName": "QTSOnPrem",
												"type": "IntegrationRuntimeReference"
											}
										}
									},
									{
										"name": "Set variable loop token",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "Get Syrinx Auth Token in loop",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "Syrinx Token",
											"value": {
												"value": "@string(activity('Get Syrinx Auth Token in loop').output.access_Token)",
												"type": "Expression"
											}
										}
									}
								]
							}
						},
						{
							"name": "Get Syrinx Auth Token_copy2",
							"description": "Acquire an auth token using encoded user name and password",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "Copy Syrinx resposne to SQL_copy1",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"method": "GET",
								"headers": {
									"Authorization": "Basic QWRtaW46cGFzc3dvcmQ=",
									"Content-Type": "application/json",
									"Accept": "application/json"
								},
								"url": "http://qts-syrinx-1/DemoSyrinxWebApi/api/v1.2/Auth",
								"connectVia": {
									"referenceName": "QTSOnPrem",
									"type": "IntegrationRuntimeReference"
								}
							}
						},
						{
							"name": "Loop Token",
							"description": "Token generated every 10 pages of data to avoid it expiring",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Get Syrinx Auth Token_copy2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "Syrinx Token",
								"value": {
									"value": "@string(activity('Get Syrinx Auth Token').output.access_Token)\n",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "pageNumbers",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "totalPages",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "pageNumbers",
					"value": {
						"value": "@range(1, variables('totalPages'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "loopCounter",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "pageNumbers",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "loopCounter",
					"value": 0
				}
			}
		],
		"variables": {
			"Temp": {
				"type": "String"
			},
			"Syrinx Token": {
				"type": "String"
			},
			"totalPages": {
				"type": "Integer"
			},
			"currentPage": {
				"type": "Integer"
			},
			"totalItemCount": {
				"type": "Integer"
			},
			"pageNumbers": {
				"type": "Array"
			},
			"loopCounter": {
				"type": "Integer"
			}
		},
		"folder": {
			"name": "Integrations"
		},
		"annotations": []
	}
}