{
	"name": "prod-pipeline-cirrotech-filetransfer",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata from Fileshare",
				"type": "GetMetadata",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "QTS_Fileshare_Dataset",
						"type": "DatasetReference"
					},
					"fieldList": [
						"itemName",
						"itemType",
						"childItems"
					],
					"storeSettings": {
						"type": "FileServerReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "Get Metadata from SFTP",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "QTS_SFTP_Dataset",
						"type": "DatasetReference",
						"parameters": {
							"WorkingDirectory": "Invoices/Test/"
						}
					},
					"fieldList": [
						"itemName",
						"itemType",
						"childItems"
					],
					"storeSettings": {
						"type": "SftpReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false,
						"disableChunking": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "ForEach file in SFTP",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata from SFTP",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata from SFTP').output.childItems",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "If file is PDF or XML",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@or(endswith(item().name, '.xml'), endswith(item().name, '.pdf'))\n",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Copy File from SFTP to Fileshare",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "BinarySource",
												"storeSettings": {
													"type": "SftpReadSettings",
													"recursive": false,
													"deleteFilesAfterCompletion": false,
													"disableChunking": false
												},
												"formatSettings": {
													"type": "BinaryReadSettings"
												}
											},
											"sink": {
												"type": "BinarySink",
												"storeSettings": {
													"type": "FileServerWriteSettings",
													"copyBehavior": "FlattenHierarchy"
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "QTS_SFTP_Dataset",
												"type": "DatasetReference",
												"parameters": {
													"FileName": {
														"value": "@item().name\r\n",
														"type": "Expression"
													},
													"WorkingDirectory": "Invoices/Test/"
												}
											}
										],
										"outputs": [
											{
												"referenceName": "QTS_Fileshare_Dataset",
												"type": "DatasetReference"
											}
										]
									},
									{
										"name": "Copy File from SFTP to Processed",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "Copy File from SFTP to Fileshare",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "BinarySource",
												"storeSettings": {
													"type": "SftpReadSettings",
													"recursive": false,
													"deleteFilesAfterCompletion": false,
													"disableChunking": false
												},
												"formatSettings": {
													"type": "BinaryReadSettings"
												}
											},
											"sink": {
												"type": "BinarySink",
												"storeSettings": {
													"type": "SftpWriteSettings",
													"copyBehavior": "FlattenHierarchy",
													"operationTimeout": "01:00:00",
													"useTempFileRename": false
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "QTS_SFTP_Dataset",
												"type": "DatasetReference",
												"parameters": {
													"FileName": {
														"value": "@item().name\r\n",
														"type": "Expression"
													},
													"WorkingDirectory": "Invoices/Test/"
												}
											}
										],
										"outputs": [
											{
												"referenceName": "QTS_SFTP_Dataset",
												"type": "DatasetReference",
												"parameters": {
													"FileName": {
														"value": "@item().name\n",
														"type": "Expression"
													},
													"WorkingDirectory": "Invoices/Test/Processed"
												}
											}
										]
									}
								]
							}
						}
					]
				}
			}
		],
		"variables": {
			"Temp": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Integrations"
		},
		"annotations": []
	}
}